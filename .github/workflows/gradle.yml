name: Java CI with Gradle

on:
  push:
    branches: [1.16]
  pull_request:
    branches: [1.16]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        jdk: [8, 11]
    name: Build for Java ${{ matrix.jdk }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v2
        with:
          java-version: '${{ matrix.jdk }}'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build
      - name: Run Gradle Checks
        run: ./gradlew check
      - name: Run Unit Tests with Gradle
        run: ./gradlew test

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

  deploy:
    runs-on: ubunut-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Assemble Jar
        run: ./gradlew jar

      - name: Find the jar
        run: echo "JAR_FILE=$(find build/libs/lazierae2-*-*.jar)" >> $GITHUB_ENV

      - name: Extract Minecraft and Mod Version
        run: echo ${$(find build/libs/lazierae2-*-*.jar)%.*} | awk -F- '{ print "MINECRAFT_VERSION=" $2; print "MOD_VERSION=" $3; }' >> $GITHUB_ENV

      - uses: actions/upload-artifact@v2
        with:
          name: LazierAE2.jar
          path: ${{ env.JAR_FILE }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.MINECRAFT_VERSION }}-${{ env.MOD_VERSION }}
          file: ${{ env.JAR_FILE }}
